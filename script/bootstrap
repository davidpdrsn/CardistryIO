#!/bin/bash
set -e

# Make sure docker is installed
if ! command -v docker-compose > /dev/null; then
cat <<EOF
  You'll need docker and docker-compose

  If you're on OS X or Windows
    - Install the docker toolbox: https://www.docker.com/docker-toolbox
    - Make sure you also install docker-machine
    - When setup is completed make sure to start the app "Docker Quickstart Terminal". It will download and setup the default Docker VM for you

  If you're on Linux, check your package manager for docker and docker-compose
EOF
  exit
fi

if ! command -v docker > /dev/null; then
  if [ $(uname) = "Darwin" ]; then
    echo "---- Making sure docker-machine is running"
    docker-machine start default || true

    echo "---- Connecting to docker-machine"
    eval $(docker-machine env default)
  fi
fi

# Build docker instance
echo "---- Building docker image"
docker-compose build

docker-compose up -d db 

echo "---- Installing dependencies"
docker-compose run web bundle install

# Add binstubs to PATH via export PATH=".git/safe/../../bin:$PATH" in ~/.zshenv
if [ ! -d .git/safe ]; then
  echo "---- Making .git/safe hack"
  mkdir .git/safe
fi

echo "---- Setting up databases"
docker-compose run web bin/rake db:create RAILS_ENV=development
docker-compose run web bin/rake db:create RAILS_ENV=test
docker-compose run web bin/rake db:migrate RAILS_ENV=development
docker-compose run web bin/rake db:migrate RAILS_ENV=test
docker-compose run web bin/rake db:seed RAILS_ENV=development

cat <<EOF

All set!

  Start the app with "docker-compose up"
  When started you can connect at http://`docker-machine ip default`:3000

  If you wanna to work production data locally run "script/production-data-to-local"
  This requires that you have access to Heroku, ask Planck about it

  You should now be able to run the tests with "docker-compose run web bin/rspec"
  You can use script/production-data-to-local to pull down the production database

EOF
